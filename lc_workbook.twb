<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0318.1720                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cleaned_df' inline='true' name='textscan.42302.679503402800' version='9.0'>
      <connection class='textscan' directory='/Users/Will/Devel/metis/lc' filename='cleaned_df.csv' password='' server=''>
        <relation name='cleaned_df#csv' table='[cleaned_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='total_pymnt' ordinal='1' />
            <column datatype='integer' name='zip_code' ordinal='2' />
            <column datatype='real' name='member_id' ordinal='3' />
            <column datatype='integer' name='id' ordinal='4' />
            <column datatype='real' name='loan_amnt' ordinal='5' />
            <column datatype='real' name='int_rate' ordinal='6' />
            <column datatype='real' name='installment' ordinal='7' />
            <column datatype='real' name='emp_length' ordinal='8' />
            <column datatype='string' name='home_ownership' ordinal='9' />
            <column datatype='string' name='grade' ordinal='10' />
            <column datatype='integer' name='sub_grade' ordinal='11' />
            <column datatype='string' name='emp_title' ordinal='12' />
            <column datatype='datetime' name='issue_d' ordinal='13' />
            <column datatype='string' name='loan_status' ordinal='14' />
            <column datatype='real' name='annual_inc' ordinal='15' />
            <column datatype='integer' name='verification_status' ordinal='16' />
            <column datatype='string' name='purpose' ordinal='17' />
            <column datatype='string' name='addr_state' ordinal='18' />
            <column datatype='real' name='inq_last_6mths' ordinal='19' />
            <column datatype='real' name='dti' ordinal='20' />
            <column datatype='real' name='revol_util' ordinal='21' />
            <column datatype='real' name='mths_since_last_delinq' ordinal='22' />
            <column datatype='real' name='pub_rec' ordinal='23' />
            <column datatype='real' name='revol_bal' ordinal='24' />
            <column datatype='real' name='open_acc' ordinal='25' />
            <column datatype='real' name='collections_12_mths_ex_med' ordinal='26' />
            <column datatype='real' name='delinq_2yrs' ordinal='27' />
            <column datatype='datetime' name='earliest_cr_line' ordinal='28' />
            <column datatype='real' name='fico_range_low' ordinal='29' />
            <column datatype='datetime' name='last_credit_pull_d' ordinal='30' />
            <column datatype='real' name='ratio_inc_debt' ordinal='31' />
            <column datatype='real' name='ratio_inc_installment' ordinal='32' />
            <column datatype='real' name='ratio_mth_inc_all_payments' ordinal='33' />
            <column datatype='integer' name='year_issued' ordinal='34' />
            <column datatype='integer' name='month_issued' ordinal='35' />
            <column datatype='integer' name='delinq' ordinal='36' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_pymnt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_pymnt]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>total_pymnt</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>zip_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>member_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[member_id]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>member_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loan_amnt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[loan_amnt]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>loan_amnt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>int_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[int_rate]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>int_rate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>installment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[installment]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>installment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emp_length</remote-name>
            <remote-type>5</remote-type>
            <local-name>[emp_length]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>emp_length</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_ownership</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_ownership]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>home_ownership</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[grade]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>grade</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sub_grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sub_grade]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>sub_grade</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emp_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[emp_title]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>emp_title</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>issue_d</remote-name>
            <remote-type>135</remote-type>
            <local-name>[issue_d]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>issue_d</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loan_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[loan_status]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>loan_status</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>annual_inc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[annual_inc]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>annual_inc</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>verification_status</remote-name>
            <remote-type>20</remote-type>
            <local-name>[verification_status]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>verification_status</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purpose</remote-name>
            <remote-type>129</remote-type>
            <local-name>[purpose]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>purpose</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>addr_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[addr_state]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>addr_state</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inq_last_6mths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inq_last_6mths]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>inq_last_6mths</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dti</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dti]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>dti</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>revol_util</remote-name>
            <remote-type>5</remote-type>
            <local-name>[revol_util]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>revol_util</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mths_since_last_delinq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mths_since_last_delinq]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>mths_since_last_delinq</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pub_rec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pub_rec]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>pub_rec</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>revol_bal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[revol_bal]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>revol_bal</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>open_acc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[open_acc]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>open_acc</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>collections_12_mths_ex_med</remote-name>
            <remote-type>5</remote-type>
            <local-name>[collections_12_mths_ex_med]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>collections_12_mths_ex_med</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delinq_2yrs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[delinq_2yrs]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>delinq_2yrs</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earliest_cr_line</remote-name>
            <remote-type>135</remote-type>
            <local-name>[earliest_cr_line]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>earliest_cr_line</remote-alias>
            <ordinal>28</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fico_range_low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fico_range_low]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>fico_range_low</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_credit_pull_d</remote-name>
            <remote-type>135</remote-type>
            <local-name>[last_credit_pull_d]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>last_credit_pull_d</remote-alias>
            <ordinal>30</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratio_inc_debt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ratio_inc_debt]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>ratio_inc_debt</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratio_inc_installment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ratio_inc_installment]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>ratio_inc_installment</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratio_mth_inc_all_payments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ratio_mth_inc_all_payments]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>ratio_mth_inc_all_payments</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_issued</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year_issued]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>year_issued</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_issued</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month_issued]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>month_issued</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delinq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[delinq]</local-name>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias>delinq</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[cleaned_df#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Annual Inc (bin)' datatype='integer' name='[Annual Inc (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[annual_inc]' peg='0' size='10000' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ratio Mth Inc All Payments (bin)' datatype='integer' name='[Ratio Mth Inc All Payments (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[ratio_mth_inc_all_payments]' peg='0' size='0.02' />
      </column>
      <column caption='Addr State' datatype='string' name='[addr_state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Annual Inc' datatype='real' name='[annual_inc]' role='dimension' type='ordinal'>
      </column>
      <column caption='Collections 12 Mths Ex Med' datatype='real' name='[collections_12_mths_ex_med]' role='measure' type='quantitative'>
      </column>
      <column caption='Delinq' datatype='integer' name='[delinq]' role='measure' type='quantitative'>
      </column>
      <column caption='Delinq 2Yrs' datatype='real' name='[delinq_2yrs]' role='measure' type='quantitative'>
      </column>
      <column caption='Dti' datatype='real' name='[dti]' role='measure' type='quantitative'>
      </column>
      <column caption='Earliest Cr Line' datatype='datetime' name='[earliest_cr_line]' role='dimension' type='ordinal'>
      </column>
      <column caption='Emp Length' datatype='real' name='[emp_length]' role='measure' type='quantitative'>
      </column>
      <column caption='Emp Title' datatype='string' name='[emp_title]' role='dimension' type='nominal'>
      </column>
      <column caption='fico_range_low (bin)' datatype='integer' name='[fico_range_low (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[fico_range_low]' peg='0' size='10' />
      </column>
      <column aggregation='Sum' datatype='real' name='[fico_range_low]' role='dimension' type='ordinal'>
      </column>
      <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
      </column>
      <column caption='Home Ownership' datatype='string' name='[home_ownership]' role='dimension' type='nominal'>
      </column>
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal'>
      </column>
      <column caption='Inq Last 6Mths' datatype='real' name='[inq_last_6mths]' role='measure' type='quantitative'>
      </column>
      <column caption='Installment' datatype='real' name='[installment]' role='measure' type='quantitative'>
      </column>
      <column caption='Int Rate' datatype='real' name='[int_rate]' role='measure' type='quantitative'>
      </column>
      <column caption='Issue D' datatype='datetime' name='[issue_d]' role='dimension' type='ordinal'>
      </column>
      <column caption='Last Credit Pull D' datatype='datetime' name='[last_credit_pull_d]' role='dimension' type='ordinal'>
      </column>
      <column caption='Loan Amnt' datatype='real' name='[loan_amnt]' role='measure' type='quantitative'>
      </column>
      <column caption='Loan Status' datatype='string' name='[loan_status]' role='dimension' type='nominal'>
      </column>
      <column caption='Member Id' datatype='real' name='[member_id]' role='dimension' type='ordinal'>
      </column>
      <column caption='Month Issued' datatype='integer' name='[month_issued]' role='dimension' type='quantitative'>
      </column>
      <column caption='Mths Since Last Delinq' datatype='real' name='[mths_since_last_delinq]' role='measure' type='quantitative'>
      </column>
      <column caption='Open Acc' datatype='real' name='[open_acc]' role='measure' type='quantitative'>
      </column>
      <column caption='Pub Rec' datatype='real' name='[pub_rec]' role='measure' type='quantitative'>
      </column>
      <column caption='Purpose' datatype='string' name='[purpose]' role='dimension' type='nominal'>
      </column>
      <column caption='Ratio Inc Debt' datatype='real' name='[ratio_inc_debt]' role='measure' type='quantitative'>
      </column>
      <column caption='Ratio Inc Installment' datatype='real' name='[ratio_inc_installment]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Ratio Mth Inc All Payments' datatype='real' name='[ratio_mth_inc_all_payments]' role='dimension' type='ordinal'>
      </column>
      <column caption='Revol Bal' datatype='real' name='[revol_bal]' role='measure' type='quantitative'>
      </column>
      <column caption='Revol Util' datatype='real' name='[revol_util]' role='measure' type='quantitative'>
      </column>
      <column caption='Sub Grade' datatype='integer' name='[sub_grade]' role='measure' type='quantitative'>
      </column>
      <column caption='Total Pymnt' datatype='real' name='[total_pymnt]' role='measure' type='quantitative'>
      </column>
      <column caption='Verification Status' datatype='integer' name='[verification_status]' role='measure' type='quantitative'>
      </column>
      <column caption='Year Issued' datatype='integer' name='[year_issued]' role='dimension' type='quantitative'>
      </column>
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='delinq grade'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Grade&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df' name='textscan.42302.679503402800' />
          </datasources>
          <datasource-dependencies datasource='textscan.42302.679503402800'>
            <column-instance column='[delinq]' derivation='Avg' name='[avg:delinq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[member_id]' derivation='Count' name='[cnt:member_id:qk]' pivot='key' type='quantitative' />
            <column caption='Delinq' datatype='integer' name='[delinq]' role='measure' type='quantitative'>
            </column>
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
            </column>
            <column caption='Member Id' datatype='real' name='[member_id]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42302.679503402800].[none:grade:nk]' filter-group='3'>
            <groupfilter from='&quot;C&quot;' function='range' level='[none:grade:nk]' to='&quot;G&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42302.679503402800].[none:grade:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.42302.679503402800].[none:grade:nk]' value='31' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42302.679503402800].[cnt:member_id:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42302.679503402800].[none:grade:nk]</rows>
        <cols>[textscan.42302.679503402800].[avg:delinq:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='delinq income'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df' name='textscan.42302.679503402800' />
          </datasources>
          <datasource-dependencies datasource='textscan.42302.679503402800'>
            <column caption='Annual Inc (bin)' datatype='integer' name='[Annual Inc (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[annual_inc]' peg='0' size='10000' />
            </column>
            <column datatype='integer' name='[F1]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Annual Inc' datatype='real' name='[annual_inc]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[delinq]' derivation='Avg' name='[avg:delinq:qk]' pivot='key' type='quantitative' />
            <column caption='Collections 12 Mths Ex Med' datatype='real' name='[collections_12_mths_ex_med]' role='measure' type='quantitative'>
            </column>
            <column caption='Delinq' datatype='integer' name='[delinq]' role='measure' type='quantitative'>
            </column>
            <column caption='Delinq 2Yrs' datatype='real' name='[delinq_2yrs]' role='measure' type='quantitative'>
            </column>
            <column caption='Dti' datatype='real' name='[dti]' role='measure' type='quantitative'>
            </column>
            <column caption='Emp Length' datatype='real' name='[emp_length]' role='measure' type='quantitative'>
            </column>
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
            </column>
            <column caption='Inq Last 6Mths' datatype='real' name='[inq_last_6mths]' role='measure' type='quantitative'>
            </column>
            <column caption='Installment' datatype='real' name='[installment]' role='measure' type='quantitative'>
            </column>
            <column caption='Int Rate' datatype='real' name='[int_rate]' role='measure' type='quantitative'>
            </column>
            <column caption='Loan Amnt' datatype='real' name='[loan_amnt]' role='measure' type='quantitative'>
            </column>
            <column caption='Mths Since Last Delinq' datatype='real' name='[mths_since_last_delinq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
            <column caption='Open Acc' datatype='real' name='[open_acc]' role='measure' type='quantitative'>
            </column>
            <column caption='Pub Rec' datatype='real' name='[pub_rec]' role='measure' type='quantitative'>
            </column>
            <column caption='Ratio Inc Debt' datatype='real' name='[ratio_inc_debt]' role='measure' type='quantitative'>
            </column>
            <column caption='Ratio Inc Installment' datatype='real' name='[ratio_inc_installment]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Ratio Mth Inc All Payments' datatype='real' name='[ratio_mth_inc_all_payments]' role='dimension' type='ordinal'>
            </column>
            <column caption='Revol Bal' datatype='real' name='[revol_bal]' role='measure' type='quantitative'>
            </column>
            <column caption='Revol Util' datatype='real' name='[revol_util]' role='measure' type='quantitative'>
            </column>
            <column caption='Sub Grade' datatype='integer' name='[sub_grade]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[collections_12_mths_ex_med]' derivation='Sum' name='[sum:collections_12_mths_ex_med:qk]' pivot='key' type='quantitative' />
            <column-instance column='[delinq]' derivation='Sum' name='[sum:delinq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[delinq_2yrs]' derivation='Sum' name='[sum:delinq_2yrs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dti]' derivation='Sum' name='[sum:dti:qk]' pivot='key' type='quantitative' />
            <column-instance column='[emp_length]' derivation='Sum' name='[sum:emp_length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[inq_last_6mths]' derivation='Sum' name='[sum:inq_last_6mths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[installment]' derivation='Sum' name='[sum:installment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[int_rate]' derivation='Sum' name='[sum:int_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[loan_amnt]' derivation='Sum' name='[sum:loan_amnt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mths_since_last_delinq]' derivation='Sum' name='[sum:mths_since_last_delinq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[open_acc]' derivation='Sum' name='[sum:open_acc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pub_rec]' derivation='Sum' name='[sum:pub_rec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ratio_inc_debt]' derivation='Sum' name='[sum:ratio_inc_debt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ratio_inc_installment]' derivation='Sum' name='[sum:ratio_inc_installment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ratio_mth_inc_all_payments]' derivation='Sum' name='[sum:ratio_mth_inc_all_payments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revol_bal]' derivation='Sum' name='[sum:revol_bal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revol_util]' derivation='Sum' name='[sum:revol_util:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sub_grade]' derivation='Sum' name='[sum:sub_grade:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42302.679503402800].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:collections_12_mths_ex_med:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:delinq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:delinq_2yrs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:dti:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:emp_length:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:F1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:inq_last_6mths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:installment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:int_rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:loan_amnt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:mths_since_last_delinq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:open_acc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:pub_rec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:ratio_inc_debt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:ratio_inc_installment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:ratio_mth_inc_all_payments:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:revol_bal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:revol_util:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:sub_grade:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42302.679503402800].[Annual Inc (bin)]'>
            <groupfilter expression='AVG([annual_inc]) &lt; 200000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter from='0' function='range' level='[Annual Inc (bin)]' to='15' />
                <groupfilter function='member' level='[Annual Inc (bin)]' member='%null%' />
                <groupfilter from='20' function='range' level='[Annual Inc (bin)]' to='750' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42302.679503402800].[none:grade:nk]' filter-group='3'>
            <groupfilter from='&quot;C&quot;' function='range' level='[none:grade:nk]' to='&quot;G&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42302.679503402800].[Annual Inc (bin)]</column>
            <column>[textscan.42302.679503402800].[:Measure Names]</column>
            <column>[textscan.42302.679503402800].[none:grade:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[textscan.42302.679503402800].[Annual Inc (bin)]' value='64' />
            <format attr='height-header' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42302.679503402800].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42302.679503402800].[Annual Inc (bin)]</rows>
        <cols>[textscan.42302.679503402800].[avg:delinq:qk]</cols>
        <show-full-range>
          <column>[textscan.42302.679503402800].[Annual Inc (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='delinq_fico'>
      <layout-options>
        <title>
          <formatted-text>
            <run>FICO Scores</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df' name='textscan.42302.679503402800' />
          </datasources>
          <datasource-dependencies datasource='textscan.42302.679503402800'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[delinq]' derivation='Avg' name='[avg:delinq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Delinq' datatype='integer' name='[delinq]' role='measure' type='quantitative'>
            </column>
            <column caption='fico_range_low (bin)' datatype='integer' name='[fico_range_low (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[fico_range_low]' peg='0' size='10' />
            </column>
            <column aggregation='Sum' datatype='real' name='[fico_range_low]' role='dimension' type='ordinal'>
            </column>
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[fico_range_low]' derivation='None' name='[none:fico_range_low:ok]' pivot='key' type='ordinal' />
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42302.679503402800].[none:fico_range_low:ok]'>
            <groupfilter expression='COUNT([fico_range_low]) &gt; 150' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter from='660.0' function='range' level='[none:fico_range_low:ok]' to='840.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42302.679503402800].[none:grade:nk]' filter-group='3'>
            <groupfilter from='&quot;C&quot;' function='range' level='[none:grade:nk]' to='&quot;G&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42302.679503402800].[none:fico_range_low:ok]</column>
            <column>[textscan.42302.679503402800].[none:grade:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42302.679503402800].[cnt:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42302.679503402800].[fico_range_low (bin)]</rows>
        <cols>[textscan.42302.679503402800].[avg:delinq:qk]</cols>
        <show-full-range>
          <column>[textscan.42302.679503402800].[fico_range_low (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='delinq_ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Debt Payments to Gross Income Ratio</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df' name='textscan.42302.679503402800' />
          </datasources>
          <datasource-dependencies datasource='textscan.42302.679503402800'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Ratio Mth Inc All Payments (bin)' datatype='integer' name='[Ratio Mth Inc All Payments (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[ratio_mth_inc_all_payments]' peg='0' size='0.02' />
            </column>
            <column-instance column='[delinq]' derivation='Avg' name='[avg:delinq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Delinq' datatype='integer' name='[delinq]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Ratio Mth Inc All Payments' datatype='real' name='[ratio_mth_inc_all_payments]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42302.679503402800].[Ratio Mth Inc All Payments (bin)]'>
            <groupfilter expression='AVG([ratio_mth_inc_all_payments]) &lt; 0.5' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[Ratio Mth Inc All Payments (bin)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.42302.679503402800].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>200</min>
            <max>46488</max>
          </filter>
          <slices>
            <column>[textscan.42302.679503402800].[Ratio Mth Inc All Payments (bin)]</column>
            <column>[textscan.42302.679503402800].[cnt:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42302.679503402800].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42302.679503402800].[Ratio Mth Inc All Payments (bin)]</rows>
        <cols>[textscan.42302.679503402800].[avg:delinq:qk]</cols>
        <show-full-range>
          <column>[textscan.42302.679503402800].[Ratio Mth Inc All Payments (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='fico_int'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df' name='textscan.42302.679503402800' />
          </datasources>
          <datasource-dependencies datasource='textscan.42302.679503402800'>
            <column aggregation='Sum' caption='Annual Inc' datatype='real' name='[annual_inc]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[int_rate]' derivation='Avg' name='[avg:int_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[loan_amnt]' derivation='Avg' name='[avg:loan_amnt:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[fico_range_low]' role='dimension' type='ordinal'>
            </column>
            <column caption='Int Rate' datatype='real' name='[int_rate]' role='measure' type='quantitative'>
            </column>
            <column caption='Loan Amnt' datatype='real' name='[loan_amnt]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[fico_range_low]' derivation='None' name='[none:fico_range_low:ok]' pivot='key' type='ordinal' />
            <column-instance column='[annual_inc]' derivation='Sum' name='[sum:annual_inc:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42302.679503402800].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[sum:annual_inc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42302.679503402800].[avg:loan_amnt:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.42302.679503402800].[none:fico_range_low:ok]' direction='ASC' using='[textscan.42302.679503402800].[avg:int_rate:qk]'>
          </sort>
          <slices>
            <column>[textscan.42302.679503402800].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.42302.679503402800].[none:fico_range_low:ok]</rows>
        <cols>[textscan.42302.679503402800].[avg:int_rate:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='profile'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df' name='textscan.42302.679503402800' />
          </datasources>
          <datasource-dependencies datasource='textscan.42302.679503402800'>
            <column aggregation='Sum' caption='Annual Inc' datatype='real' name='[annual_inc]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[annual_inc]' derivation='Avg' name='[avg:annual_inc:qk]' pivot='key' type='quantitative' />
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.42302.679503402800].[none:grade:nk]</rows>
        <cols>[textscan.42302.679503402800].[avg:annual_inc:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='total_loans'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Average Loan Amounts depending on the grade. The higher the loan requested, the higher the inerest rate. &#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df' name='textscan.42302.679503402800' />
          </datasources>
          <datasource-dependencies datasource='textscan.42302.679503402800'>
            <column-instance column='[loan_amnt]' derivation='Avg' name='[avg:loan_amnt:qk]' pivot='key' type='quantitative' />
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
            </column>
            <column caption='Home Ownership' datatype='string' name='[home_ownership]' role='dimension' type='nominal'>
            </column>
            <column caption='Loan Amnt' datatype='real' name='[loan_amnt]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
            <column-instance column='[home_ownership]' derivation='None' name='[none:home_ownership:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42302.679503402800].[none:home_ownership:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:home_ownership:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:home_ownership:nk]' member='&quot;NONE&quot;' />
                <groupfilter function='member' level='[none:home_ownership:nk]' member='&quot;OTHER&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42302.679503402800].[none:home_ownership:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.42302.679503402800].[none:grade:nk]</rows>
        <cols>[textscan.42302.679503402800].[avg:loan_amnt:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Deliquencies'>
      <style>
      </style>
      <size maxheight='900' maxwidth='1000' minheight='900' minwidth='1000' />
      <datasources>
        <datasource caption='cleaned_df' name='textscan.42302.679503402800' />
      </datasources>
      <datasource-dependencies datasource='textscan.42302.679503402800'>
        <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='94444' id='15' param='horz' type='layout-flow' w='100000' x='0' y='5556'>
            <zone h='94444' id='11' param='horz' type='layout-flow' w='88300' x='0' y='5556'>
              <zone fixed-size='871' h='94444' id='5' is-fixed='true' param='horz' type='layout-flow' w='88300' x='0' y='5556'>
                <zone h='94444' id='3' type='layout-basic' w='38800' x='0' y='5556'>
                  <zone h='47221' id='1' name='delinq grade' show-title='true' w='38800' x='0' y='52779'>
                  </zone>
                  <zone h='47223' id='7' name='delinq_fico' show-title='true' w='38800' x='0' y='5556'>
                  </zone>
                </zone>
                <zone fixed-size='495' h='94444' id='4' is-fixed='true' param='vert' type='layout-flow' w='49500' x='38800' y='5556'>
                  <zone h='44777' id='9' name='delinq income' show-title='true' w='49500' x='38800' y='5556'>
                    <layout-cache fixed-size-h='395' minwidth='166' type-h='fixed' type-w='scalable' />
                  </zone>
                  <zone h='49667' id='13' name='delinq_ratio' show-title='true' w='49500' x='38800' y='50333'>
                    <layout-cache fixed-size-h='475' minwidth='182' type-h='fixed' type-w='scalable' />
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='68' h='94444' id='12' is-fixed='true' name='delinq grade' param='[textscan.42302.679503402800].[none:grade:nk]' type='filter' w='7600' x='88300' y='5556'>
            </zone>
          </zone>
          <zone forceUpdate='true' h='5556' id='16' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#26794a' fontname='Gil Sans MT' fontsize='24'>The Largest Correlates of Delinquancy</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Differences between grades'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' name='profile' w='50000' x='0' y='0'>
          </zone>
          <zone h='100000' id='3' name='total_loans' show-caption='true' w='50000' x='50000' y='0'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='delinq_loan'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='profile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42302.679503402800].[none:grade:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Differences between grades'>
      <active id='3' />
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='total_loans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42302.679503402800].[none:grade:nk]</field>
          <field>[textscan.42302.679503402800].[none:home_ownership:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='fico_int'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42302.679503402800].[none:fico_range_low:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='delinq grade'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42302.679503402800].[cnt:member_id:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42302.679503402800].[cnt:member_id:qk]</field>
          <field>[textscan.42302.679503402800].[none:grade:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='delinq_fico'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42302.679503402800].[cnt:Number of Records:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42302.679503402800].[Ratio Mth Inc All Payments (bin)]</field>
          <field>[textscan.42302.679503402800].[cnt:Number of Records:qk]</field>
          <field>[textscan.42302.679503402800].[fico_range_low (bin)]</field>
          <field>[textscan.42302.679503402800].[none:fico_range_low:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='delinq income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42302.679503402800].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42302.679503402800].[Annual Inc (bin)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42302.679503402800].[Annual Inc (bin)]</field>
          <field>[textscan.42302.679503402800].[cnt:home_ownership:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Deliquencies'>
      <zones>
        <zone forceUpdate='true' name='' type='text' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='delinq_loan'>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='delinq_ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42302.679503402800].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42302.679503402800].[Ratio Mth Inc All Payments (bin)]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='profile' width='384'>
      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
      E5FS4cQVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Differences between grades' width='384'>
      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
      GAIEQAwBAiCGAAEQQ4AAiCFAAMQQIABiCBAAMQQIgBgCBEAMAQIghgABEEOAAIghQADEECAA
      YggQADEECIAYAgRADAECIIYAARBDgACIIUAAxBAgAGIIEAAxBAiAGAIEQAwBAiCGAAEQQ4AA
      iCFAAMQQIABiCBAAMQQIgBgCBEAMAQIghgABEEOAAIghQADEECAAYggQADEECIAYAgRADAEC
      IIYAARBDgACIIUAAxBAgAGIIEAAxBAiAGAIEQAwBAiCGAAEQQ4AAiCFAAMQQIABiCBAAMQQI
      gBgCBEAMAQIghgABEEOAAIghQADEECAAYggQADEECIAYAgRADAECIIYAARBDgACIIUAAxBAg
      AGIIEAAxBAiAGAIEQAwBAiCGAAEQQ4AAiCFAAMQQIABiCBAAMQQIgBgCBEAMAQIghgABEEOA
      AIghQADEECAAYggQADEECIAYAgRADAECIIYAARBDgACIIUAAxBAgAGIIEAAxBAiAGAIEQAwB
      AiCGAAEQQ4AAiCFAAMQQIABiCBAAMQQIgBgCBEAMAQIghgABEEOAAIghQADEECAAYggQADEE
      CIAYAgRADAECIIYAARBDgACIIUAAxBAgAGIIEAAxBAiAGAIEQAwBAiCGAAEQQ4AAiCFAAMQQ
      IABiCBAAMQQIgBgCBEAMAQIghgABEEOAAIghQADEECAAYggQADEECIAYAgRADAECIIYAARBD
      gACIIUAAxBAgAGIIEAAxBAiAGAIEQAwBAiCGAAEQQ4AAiCFAAMQQIABiCBAAMQQIgBgCBEAM
      AQIghgABEEOAAIghQADEECAAYggQADEECIAYAgRADAECIIYAARBDgACIIUAAxBAgAGIIEAAx
      /x9imb+EqmISLAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='total_loans' width='384'>
      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
      z29Ol7QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='fico_int' width='384'>
      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
      RAkNmNN/AznQdK4PP8buAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='delinq grade' width='384'>
      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
      FoV6f/xRcPzQ4ZbfXl8xc7I6K3fxrxS+HZyMxNDplkmHy127fNWcAjcRqU5fTcOC2prSTLiz
      Zyg4kZhxAen08PFzY7Kizl+1vqbYS0SK5qqsqV+0sMqI9fcPtg3HzHB/z+jEWIqKm5sayvLc
      MmOkuOauun+FXzLN8OFPWzN36CeIj4+ODPTFKW9+TX1NRa4qMZKdZY2rlxV6dSl2+EhL0rz5
      JtSp8ORwT2eU/HMq6xqqCxwyI1kvrl/aXJrvVRLHT7aFEmlORBQ/8847x89ejsv5i5sX3o0b
      fqalR06cG2OSXLt6Q22xl4hkzVleU9+4eJ4RGxgYujQUvcUlwMcunRszMhbNe2Bjg0+ViEkO
      X1H9khV1TnNkdPhi24DBZE2RtZzi6uq5JYHpVULJVzxvXoGmSBTrG0rS1z2RCwHKdpx4cryj
      I0WqQyubW3T1BeHMKy4omuOm+GQsGkvd/PJNT3S2JUmSpYrasqtPcfjzCstrvZSMJCPhRGp8
      eCAyNUWu0kKvR5evvFFqhauXlVumNdU5nLozP4EZmRydGBkhR16OL9ejXvlGal7T4nJdV0Id
      Q8mbT3i0YtGp0f5+0vx+b8G1bbRqoKG+3O91RIKjibQx/RxLVmo37PjBn/zoO1uX3pkVtm9A
      eqKzNcklSaqcf93i8OYUVtT6PlscM+8nmuntuGxmMuStqby6iUhSfbklDXX56UgiMjyllzY8
      +ps//PP/+vsbm6q0q2s6mYnuUdMwyVte4qSvuxUaUzCgTGgqSVKu4qsocF99UFJUXdM0Isvi
      1oz3OSM0lSSSmH9usefqg0xWNIdDJ7IssiwzFk0lE6arrNjvdcnXXqiKy6cTEWXMO/TuxxOJ
      dCya0Qvy/HmBa38nJDs9DkmSKGOym8fP06l0OJzRcvy+ovzrJhGy7nZIsnTd2Fxb/sufr9f8
      uV51uLVbJro77wtshENJ4ox884q9Vx9ksqJpuoOIW9yauQjJmJxIWRb31c3zStc/SdVdGlmc
      GabicBeUuQtueFbq9K43zo1OZTgtW1bzufsXbxsCBCTpDiImMdl14+4uRp/7BifpDiJiJHtc
      Nz/l6j81jSkqSU6HpMgzv84dPBBIVZmmkaSrkqbe8svOfFCRmcNBkqTIuvYFI2FM9heV+YnI
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='delinq_fico' width='384'>
      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
      PSUtPnzLpo1lFSdWr9uakj5Io+jb8ig2LcvZeGRnXlHB9o1Hm9GwzFjiblvy7WKlLjwtWrl+
      3Yay0iMbtuSlZQ5nfPYNK3/ILTxadmQ/vAv26zOHRym57h07dlY1O++4//70GIuj6/TOAyWD
      s0ckJib526u379jbxavnz5sbZdElJSdXFeftyz+sjR109+zrTOaQhOiQ4v378gsPy8JSH7rn
      dr2qbxeLyDXG2FD13p07jpRWZU2+7bqcDK+1cdv+w5lDRyYmJPLdtdt35Hb4FHPmzo0NN/TM
      b3yOjhaXbOTQ/hQlS0yOqyzav/fgYX1M+tzbZ/b1t9BgidBRrp07dlQ0dN8y757BiRFeR/OW
      3MLMYaMSEhKxrWHbjj1tHubOu+ckRpp65updzY3YEDkwKYZRahJjw48V5O8/WIQM8b+75y6T
      TtmnGZhMpYsPN+Tv2Xm4pDx97I03Ts4S3G0bdu4fNGxMQkI842zetn13qxPfdtec5ChV/p4i
      mUHTWFdTXV1dXdsYkzJ45Ij02qMHcw8UKkL7zb3zZsMlc7SfpzWFmlTcru3by063z7jtrmFp
      cYK3fe3WvYOGj42PT1B4Wrdt391k42ffMSde5y86UaOW4VPV1dXV1fVNzYNGTcxMiS0/fCCv
      oJBVhd9375xwk6avu9AylS4+3FiQu+vQ0bL+Y2beODkbedvX7cgbNHxsfHy8zN2ybfvuFge5
      9c65ybEh8Umptvrynbl7T7d6bp5z77AB8QlJ8XXHCnMPFMpDkubedbNB3bfrhLRGi1kt7N6x
      /URd+7W33jliQALxdq7btmfi5CmJCbHHC/bmFx4NSxt9+8yJUTFxRtq7Y8euo6Un4VKM/xHi
      97OYphn64kUMEQSWZSlGxpw9SUTgeZbjZDI5dfZdT4HnWI6XyeXUL+3KxLF+gWCZjLnozRRC
      BNZ/wdEvJfAcywkyueyXHp2wfhZRNMNcMvYzR2eYf/9ZJj1jZ2TyPr0H3BvHsgJBlxs7Yf1+
      imaYf/shTkgQeJblr3DshKJkDHPJ2P+Lo/M8y3FXMnbUp+ETwc9ymKLPfarV/274PMdx/AW/
      VCzLErgWDAAgItgDAgCIBgIIACAaCCAAgGgggAAAooEAAgCIBgIIACAaCCAAgGgggAAAooEA
      AgCIBgIIACAaCCAAgGgggAAAooEAAgCIBgIIACCa/w+MGARr8IYBAwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='delinq income' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Deliquencies' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='delinq_ratio' width='384'>
      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
      IbT8eO6XKzcKMh17yaxrpo+oPXnosyXr3JKcMXTCrbOu0KpZ/KPd2lj5748XWpxiYvqou+84
      96ZI21cu3nLkJK82/M9f/jcrJZIQIro7Fr7/r8wp/zNpRPJvGonF/0z/XQ1FB7YVtT3y2FOX
      DAz7atl3Ytfh0uKKpV9lT5715CP3Hdu+8mRV67Y1y7UJQ55+6jFH2aE9eWWK/DHW0VS+6vtj
      dz3wj+snD1y6dKVHlAkhlMobli+NGjBp7j8erDu648ipeq+j/ct3X1u6YZfN6VIi5i9A5U3f
      LglNn/z0449YynblnqjqvCy5WhctXj3z9r89cOf1qxd/eaay9OsNh+984LHHH7l7z/qlFfVW
      ZVNfVPmRHccauSfmPj0o2rti/a7OsYMseb9e8s2UmXMe/MutO9Z9U9fasWnDuiEzZj35yL0n
      93x/prVD6dQXQ+WNK5eYOt+UUz+8Ka2nC1bvOfnA35+cNTnjiy9XCJRSWdq2etnuY8UdDu9v
      Hcr/C6i47FTa4KHRYUGjJk2x1J20e2VCiORqrWj1jhg5OCQyMTs18nRjXVlZ5chhIwKDTJPH
      ZJ8sPqNI1LpTRWEp2SkxYQOGjRVaGhwegRBCqVh+umH0sMHB4THjh6SWFFd5XY6QpEHTWB37
      EEJkwVZU2Th24pggU9SoIVnlVWWd1801lQ51zPD+CfH9RyYY3C0O/X0P/C09Ptxg0PGE8Ex+
      qFR0qmzgiOGm4MAxEyfVVZcIMiGEiPb6Oo8he2BaTHJa3yj1GXPHH//890sG9y0rO+WhGoOG
      xYnF+W/KyCFZ5dVdb0plVUV0+sCEyJARE6e4mkvNTqmm5PCukqZx2X1+h1T+X0CCJJiCgwgh
      vEaromc/9JNFyuuCAjQcITqNVpZliVJjcCAhnFavJb/91PeiRK/XEB6q4ohKpVarONIZlVKq
      VukDjOeyBUbEX3fdVaYAhm+XkWVBVpmCtaTzP+/ZFQdJErRhoRqOEMLrtGq12pCV3tdlbfrw
      nXdSRl3WJ4bFbeuCJJqCAwkhKo2Ol7v+B6KSoNIaDXo1x/M6tUaWaVCoydFUsytnv5NKnp8s
      4TFBlgWq/uFNkbveFFESQoMDCSG8RqshxGNv+WLRN9fddEd4gI5w9Lf+lNz/C8ig0VvtDkKI
      LHopr+o8s4xTa9Wy1+4UKSGCKKpUaq1G7bY7CKFej5fXKvMnmM5gdLd3yJRIsihzhHQOCDhe
      w3Eel5sQ6vUqls0nnEqt56nVLhBCvKKg4rsW1LRavdhhFykhRPaKEqdWmWvLX33+BRI35sG7
      rlPzLI6ADGqt1e4khEiCl5w9m5zX6Dmvy+2RqCwLoqjiuYa6WlOfAX9/bO70QbG7cgqUTn0R
      nEpt4OXON0UQvOqzm8t0Gr3t7C+IxPF5+7aVmsVDO1YfPlmTs2V9TeNvO530/wLqm5JUeiLP
      7HAfz80Jjk018t6C/GJBFRpv4o8eL3ZaG/PLG5KjYxITYo8eP+Zx2/ccLExLT1TkVyEqpZ+5
      4kSt2VZ64jAfEmVQk5OFRW6BxseYjuYVuGzm/ccq0tPjlYjmG05t7JcYti/3iNtpOXqiqE9S
      H3NjzenqppCYeK2jNr+isaXiRLVNGxEkvPvGO2EZE26ZOdHaZv7px5Qs6NcnKf/IMZvHeyQ3
      JzoxjXhtRcVlVBcRprbnn6w011dWtHgSwwK/fO+VrYeLvR5bQ0NLQBCLN4hxamPfs2/Kkfzi
      Poldb0p8XEJdaVGD1Zm/b482su+4idOfePDuqVOmJEeHpGYOCgv5bW9SVc2bN+83/RcoLjgq
      wVl1fPGSlRWt4u23zwlTWd5duGz42EkZyRFrly3ZvG33oAnXTRs3MDklMWfDqrWbtoamDJ51
      xRRFPsXQB4apXA1fLV1aUNF8y+23RweQz/79Rfqw0QMyU7asWr5+286EQeOvnjq684DauopS
      zpSQkRTz++f8eRyflBS/Y92y9Ru3h/UbP/uq8Sf2bzpypmPE4OwoE//V55/vPFBw9R9vD3U3
      5hwtsrTW7cvdm5N7rF/WsIhQ5m6UD4tJbCzKXbpsVZM3+PZbZxN71WffbhkzZnxKTMCKpUt2
      5h4Zf9mNowenxkeFrF3+zaZtOwOSht5y/TSdhr3N651vytquN+UPV43P27fpWHXHhHFj1dYz
      n3/5df4Z8+13/KlvYmx0dHR0dHRL1amYzPEZyeG/baj/DzuhKaVej0et0aouOFtaEESZ6nTa
      zoeyJHpFSafTKToToF6Pl1OrNT++/UKWRK8o63RaFmcp3ZAl0StIOp32x7csUEEQKOE1GgY/
      c784Kster1et1al+PEkUBa9MOa226+gISRREmWo1WiYX07tc9E2hlApeD6/SqNW/d2/+vygg
      AGCT/68BAQCzUEAAoBgUEAAoBgUEAIpBAQGAYlBAAKAYFBAAKAYFBACKQQEBgGJQQACgGBQQ
      ACgGBQQAivk/4VAZ+7rEgz0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
